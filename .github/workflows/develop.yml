# This is the workflow the we use to cut a release and deploy it to dev and production.

name: Build and Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  release:
    types: [ "created" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Pinning to 22.04 for reliability
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: 3.11

  test:

    runs-on: ubuntu-22.04

    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
          pip install pytest

      - name: Run tests
        run: |
          test $(coverage run -a calculator.py 1 + 1) = 2
          test $(coverage run -a calculator.py 100 - 10) = 90
          test $(coverage run -a calculator.py 25 \* 5) = 125
          (! coverage run -a calculator.py 30 / 5) # Should fail as division is unsupported
          coverage report

  deploy-dev:
      runs-on: ubuntu-22.04
      #Only run this job if the event is a release and the tag starts with v
      if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v') && endsWith(github.ref, '-dev')
      environment: dev
      needs: test
      env:
        AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      steps:
        - uses: actions/checkout@v3
  
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
              python-version: 3.11
  
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip3 install awscli --upgrade
            pip3 install aws-sam-cli --upgrade
  
        - name: Deploy to dev
          run: |
            echo "Deploying to dev"
            python --version
            aws --version
            aws configure set region $AWS_DEFAULT_REGION
            sam build
            sam deploy --config-env dev --no-fail-on-empty-changeset --parameter-overrides "Version={{ github.ref}} Environment=dev"

  deploy-prod:
      runs-on: ubuntu-22.04
      #Only run this job if the event is a release and the tag starts with v
      if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v')
      environment: prod
      needs: test
      env:
        AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      steps:
        - uses: actions/checkout@v3
  
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
              python-version: 3.11
  
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip3 install awscli --upgrade
            pip3 install aws-sam-cli --upgrade
  
        - name: Deploy to Prod
          run: |
            echo "Deploying to Prod"
            python --version
            aws --version
            aws configure set region $AWS_DEFAULT_REGION
            sam build
            sam deploy --config-env prod --no-fail-on-empty-changeset --parameter-overrides "Version={{ github.ref}} Environment=prod"
           